# Author - Stuart McAlpine - December 2022

name: read_swift CI

# How does the workflow get triggered?
on:
  # Triggers when push/pull-request made to the main branch.
  pull_request:
    branches:
      - main  
  push:
    branches:
      - main

# List of jobs for this workflow.
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt install -y libopenmpi-dev libhdf5-mpi-dev
        python -m pip install --upgrade pip
        python -m pip install pylint pytest pytest-cov
        python -m pip install jupyter
        CC="mpicc" HDF5_MPI="ON" pip install --upgrade --force-reinstall --use-feature=no-binary-enable-wheel-cache --no-cache-dir --no-binary=h5py h5py

  ci-with-pytest-mpi:

    # Our strategy lists the OS and Python versions we want to test on.
    strategy:

      # Don't quit all jobs if only one job fails.
      fail-fast: false
      
      matrix:
        python-version: ["3.9"]
        os: ["ubuntu-latest"]
        mpi: ["openmpi"]
  
    # What operating system is this job running on?
    runs-on: ${{ matrix.os }}

    # Our CI steps for this job.
    steps:
      # Check out this repository code.
      - name: Check out repository code
        uses: actions/checkout@v3

      # Install Python.
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install dependencies.
      - name: Install pip and read_swift
        run: |
          sudo apt install -y libopenmpi-dev libhdf5-mpi-dev
          CC="mpicc" HDF5_MPI="ON" python3 -m pip install --upgrade --force-reinstall --no-cache-dir --no-binary=h5py h5py
          #python3 -m pip install --upgrade pip
          #python3 -m pip install .[ci]
        env:
          CC: mpicc
          HDF5_MPI: ON

      # Perform unit tests.
      - name: Test with pytest
        run: |
          cd tests
          bash get_ics.sh
          mpirun -np 2 pytest --with-mpi

          #  ci-with-pytest:
          #
          #    # Our strategy lists the OS and Python versions we want to test on.
          #    strategy:
          #
          #      # Don't quit all jobs if only one job fails.
          #      fail-fast: false
          #      
          #      matrix:
          #        python-version: ["3.8", "3.9", "3.10"]
          #        os: ["ubuntu-latest"]
          #        mpi: ["openmpi"]
          #
          #    # What operating system is this job running on?
          #    runs-on: ${{ matrix.os }}
          #
          #    # Our CI steps for this job.
          #    steps:
          #      # Check out this repository code.
          #      - name: Check out repository code
          #        uses: actions/checkout@v3
          #
          #      # Install Python.
          #      - name: Set up Python ${{ matrix.python-version }}
          #        uses: actions/setup-python@v4
          #        with:
          #          python-version: ${{ matrix.python-version }}
          #
          #      # Install MPI libs
          #      - name: Setup MPI
          #        uses: mpi4py/setup-mpi@v1
          #        with:
          #          mpi: ${{ matrix.mpi }}
          #
          #      # Install dependencies.
          #      - name: Install pip and read_swift
          #        run: |
          #          python3 -m pip install --upgrade pip
          #          python3 -m pip install .[ci]
          #
          #      # Perform unit tests.
          #      - name: Test with pytest
          #        run: |
          #          cd tests
          #          bash get_ics.sh
          #          pytest
